{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table, Space, Button, Modal } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExamList = () => {\n  _s();\n\n  const type = 'student';\n  const [visible, setVisible] = useState(false);\n  const data = [{\n    key: 1,\n    sınav: 'cloud computing',\n    startDate: '2021-02-08 11.30',\n    endDate: '2021-02-08 12.30'\n  }, {\n    key: 2,\n    sınav: 'bulut bilişim',\n    startDate: '2021-02-08 11.30',\n    endDate: '2021-02-08 12.00'\n  }];\n  const columns = [{\n    title: 'Exam',\n    dataIndex: 'sınav'\n  }, {\n    title: 'Start Date',\n    dataIndex: 'startDate'\n  }, {\n    title: 'End Date',\n    dataIndex: 'endDate'\n  }, {\n    title: 'Actions',\n    key: 'actions',\n    render: record => type === 'teacher' ? /*#__PURE__*/_jsxDEV(Space, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: '/delete-exam/'.concat(record.key),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: record => {\n          if (moment().isAfter(moment(record.startDate, 'YYYY-MM-DD HH:mm')) && moment().isBefore(moment(record.endDate, 'YYYY-MM-DD HH:mm'))) {\n            '/exam/'.concat(record.key);\n          } else {\n            setVisible(true);\n\n            /*#__PURE__*/\n            _jsxDEV(Modal, {\n              title: record.sınav,\n              visible: visible,\n              onOk: () => setVisible(false),\n              onCancel: () => setVisible(false),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: \"Exam is not available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 10\n            }, this);\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"take exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    dataSource: data,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExamList, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = ExamList;\nexport default ExamList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExamList\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/List.js"],"names":["React","useState","Table","Space","Button","Modal","Link","moment","render","ExamList","type","visible","setVisible","data","key","sınav","startDate","endDate","columns","title","dataIndex","record","concat","isAfter","isBefore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAMC,IAAI,GAAG,SAAb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMY,IAAI,GAAG,CACZ;AACCC,IAAAA,GAAG,EAAE,CADN;AAECC,IAAAA,KAAK,EAAE,iBAFR;AAGCC,IAAAA,SAAS,EAAE,kBAHZ;AAICC,IAAAA,OAAO,EAAE;AAJV,GADY,EAOZ;AACCH,IAAAA,GAAG,EAAE,CADN;AAECC,IAAAA,KAAK,EAAE,eAFR;AAGCC,IAAAA,SAAS,EAAE,kBAHZ;AAICC,IAAAA,OAAO,EAAE;AAJV,GAPY,CAAb;AAcA,QAAMC,OAAO,GAAG,CACf;AACCC,IAAAA,KAAK,EAAE,MADR;AAECC,IAAAA,SAAS,EAAE;AAFZ,GADe,EAKf;AACCD,IAAAA,KAAK,EAAE,YADR;AAECC,IAAAA,SAAS,EAAE;AAFZ,GALe,EASf;AACCD,IAAAA,KAAK,EAAE,UADR;AAECC,IAAAA,SAAS,EAAE;AAFZ,GATe,EAaf;AACCD,IAAAA,KAAK,EAAE,SADR;AAECL,IAAAA,GAAG,EAAE,SAFN;AAGCN,IAAAA,MAAM,EAAGa,MAAD,IACPX,IAAI,KAAK,SAAT,gBACC,QAAC,KAAD;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,gBAAgBY,MAAhB,CAAuBD,MAAM,CAACP,GAA9B,CAAV;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,gBAOC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACC,QAAC,IAAD;AACC,QAAA,EAAE,EAAGO,MAAD,IAAY;AACf,cACCd,MAAM,GAAGgB,OAAT,CACChB,MAAM,CAACc,MAAM,CAACL,SAAR,EAAmB,kBAAnB,CADP,KAGAT,MAAM,GAAGiB,QAAT,CAAkBjB,MAAM,CAACc,MAAM,CAACJ,OAAR,EAAiB,kBAAjB,CAAxB,CAJD,EAKE;AACD,qBAASK,MAAT,CAAgBD,MAAM,CAACP,GAAvB;AACA,WAPD,MAOO;AACNF,YAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA;AAAA,oBAAC,KAAD;AACC,cAAA,KAAK,EAAES,MAAM,CAACN,KADf;AAEC,cAAA,OAAO,EAAEJ,OAFV;AAGC,cAAA,IAAI,EAAE,MAAMC,UAAU,CAAC,KAAD,CAHvB;AAIC,cAAA,QAAQ,EAAE,MAAMA,UAAU,CAAC,KAAD,CAJ3B;AAAA,qCAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA;AAQA;AACD,SArBF;AAAA,+BAuBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAXH,GAbe,CAAhB;AAsDA,sBAAO,QAAC,KAAD;AAAO,IAAA,UAAU,EAAEC,IAAnB;AAAyB,IAAA,OAAO,EAAEK;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAzED;;GAAMT,Q;;KAAAA,Q;AA0EN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Space, Button, Modal } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { render } from '@testing-library/react';\r\nconst ExamList = () => {\r\n\tconst type = 'student';\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst data = [\r\n\t\t{\r\n\t\t\tkey: 1,\r\n\t\t\tsınav: 'cloud computing',\r\n\t\t\tstartDate: '2021-02-08 11.30',\r\n\t\t\tendDate: '2021-02-08 12.30',\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 2,\r\n\t\t\tsınav: 'bulut bilişim',\r\n\t\t\tstartDate: '2021-02-08 11.30',\r\n\t\t\tendDate: '2021-02-08 12.00',\r\n\t\t},\r\n\t];\r\n\tconst columns = [\r\n\t\t{\r\n\t\t\ttitle: 'Exam',\r\n\t\t\tdataIndex: 'sınav',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Start Date',\r\n\t\t\tdataIndex: 'startDate',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'End Date',\r\n\t\t\tdataIndex: 'endDate',\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Actions',\r\n\t\t\tkey: 'actions',\r\n\t\t\trender: (record) =>\r\n\t\t\t\ttype === 'teacher' ? (\r\n\t\t\t\t\t<Space>\r\n\t\t\t\t\t\t<Link to={'/delete-exam/'.concat(record.key)}>\r\n\t\t\t\t\t\t\t<a>delete</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Space>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Space size='middle'>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={(record) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tmoment().isAfter(\r\n\t\t\t\t\t\t\t\t\t\tmoment(record.startDate, 'YYYY-MM-DD HH:mm')\r\n\t\t\t\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\t\t\t\tmoment().isBefore(moment(record.endDate, 'YYYY-MM-DD HH:mm'))\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t'/exam/'.concat(record.key);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetVisible(true);\r\n\r\n\t\t\t\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\t\t\t\ttitle={record.sınav}\r\n\t\t\t\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\t\t\t\tonOk={() => setVisible(false)}\r\n\t\t\t\t\t\t\t\t\t\tonCancel={() => setVisible(false)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<a>Exam is not available</a>\r\n\t\t\t\t\t\t\t\t\t</Modal>;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<a>take exam</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Space>\r\n\t\t\t\t),\r\n\t\t},\r\n\t];\r\n\treturn <Table dataSource={data} columns={columns} />;\r\n};\r\nexport default ExamList;\r\n"]},"metadata":{},"sourceType":"module"}