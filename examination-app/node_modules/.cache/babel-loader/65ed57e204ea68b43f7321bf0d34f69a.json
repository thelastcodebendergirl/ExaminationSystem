{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button, Space, DatePicker, Card, Select } from 'antd';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Option\n} = Select;\n\nconst CreateExam = () => {\n  _s();\n\n  const [disable, setDisable] = useState(false);\n  const {\n    id\n  } = useParams();\n\n  const addQuestion = () => {\n    /*#__PURE__*/\n    _jsxDEV(Form.Item, {\n      rules: [{\n        required: true,\n        message: 'Missing question'\n      }],\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        title: \"Question\",\n        placeholder: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"A\",\n        placeholder: \"Option A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"B\",\n        placeholder: \"Option B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"C\",\n        placeholder: \"Option C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"D\",\n        placeholder: \"Option D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"A\",\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"B\",\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"C\",\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"D\",\n          children: \"D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this);\n  };\n\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  const onOk = value => {\n    console.log('selected time:', value[0].format('YYYY-MM-DD HH:mm'), value[1].format('YYYY-MM-DD HH:mm'));\n  };\n\n  const onClick = () => {\n    setDisable(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        display: 'grid',\n        marginBottom: 8\n      },\n      align: \"baseline\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: 'exam-name',\n          fieldKey: 'exam-name',\n          label: 'Exam Name',\n          rules: [{\n            required: true,\n            message: 'Missing exam name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: 'date-range',\n          fieldKey: 'date-range',\n          label: 'Date Interval',\n          rules: [{\n            required: true,\n            message: 'Missing date range'\n          }],\n          children: /*#__PURE__*/_jsxDEV(RangePicker, {\n            showTime: {\n              format: 'HH:mm'\n            },\n            format: \"YYYY-MM-DD HH:mm\",\n            onOk: onOk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addQuestion,\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClick,\n        disabled: disable,\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateExam, \"xgRUwifgVyhy6XEm62P3MCbaRE8=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateExam;\nexport default CreateExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/Create.js"],"names":["Form","Input","Button","Space","DatePicker","Card","Select","React","useState","useParams","MinusCircleOutlined","PlusOutlined","RangePicker","Option","CreateExam","disable","setDisable","id","addQuestion","required","message","onFinish","values","console","log","onOk","value","format","onClick","display","marginBottom"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Space, DatePicker, Card, Select } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst CreateExam = () => {\r\n\tconst [disable, setDisable] = useState(false);\r\n\tconst { id } = useParams();\r\n\tconst addQuestion = () => {\r\n\t\t<Form.Item rules={[{ required: true, message: 'Missing question' }]}>\r\n\t\t\t<Input title='Question' placeholder='Question' />\r\n\t\t\t<Input title='A' placeholder='Option A' />\r\n\t\t\t<Input title='B' placeholder='Option B' />\r\n\t\t\t<Input title='C' placeholder='Option C' />\r\n\t\t\t<Input title='D' placeholder='Option D' />\r\n\t\t\t<Select>\r\n\t\t\t\t<Option value='A'>A</Option>\r\n\t\t\t\t<Option value='B'>B</Option>\r\n\t\t\t\t<Option value='C'>C</Option>\r\n\t\t\t\t<Option value='D'>D</Option>\r\n\t\t\t</Select>\r\n\t\t</Form.Item>;\r\n\t};\r\n\tconst onFinish = (values) => {\r\n\t\tconsole.log('Received values of form:', values);\r\n\t};\r\n\tconst onOk = (value) => {\r\n\t\tconsole.log(\r\n\t\t\t'selected time:',\r\n\t\t\tvalue[0].format('YYYY-MM-DD HH:mm'),\r\n\t\t\tvalue[1].format('YYYY-MM-DD HH:mm')\r\n\t\t);\r\n\t};\r\n\tconst onClick = () => {\r\n\t\tsetDisable(true);\r\n\t};\r\n\treturn (\r\n\t\t<Form name='dynamic_form_nest_item' onFinish={onFinish} autoComplete='off'>\r\n\t\t\t<Space style={{ display: 'grid', marginBottom: 8 }} align='baseline'>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname={'exam-name'}\r\n\t\t\t\t\t\tfieldKey={'exam-name'}\r\n\t\t\t\t\t\tlabel={'Exam Name'}\r\n\t\t\t\t\t\trules={[{ required: true, message: 'Missing exam name' }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname={'date-range'}\r\n\t\t\t\t\t\tfieldKey={'date-range'}\r\n\t\t\t\t\t\tlabel={'Date Interval'}\r\n\t\t\t\t\t\trules={[{ required: true, message: 'Missing date range' }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RangePicker\r\n\t\t\t\t\t\t\tshowTime={{ format: 'HH:mm' }}\r\n\t\t\t\t\t\t\tformat='YYYY-MM-DD HH:mm'\r\n\t\t\t\t\t\t\tonOk={onOk}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button onClick={addQuestion}>Add Question</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Space>\r\n\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\tdisabled={disable}\r\n\t\t\t\t\ttype='primary'\r\n\t\t\t\t\thtmlType='submit'\r\n\t\t\t\t>\r\n\t\t\t\t\tCreate\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default CreateExam;\r\n"]},"metadata":{},"sourceType":"module"}