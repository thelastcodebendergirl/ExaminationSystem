{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\Create.js\";\nimport { Form, Input, Button, Space, DatePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\n\nconst CreateExam = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      size: 'large',\n      style: {\n        display: 'grid',\n        marginBottom: 16\n      },\n      align: \"baseline\",\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n        name: \"questions\",\n        children: (fields, {\n          add,\n          remove\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n            style: {\n              display: 'grid',\n              marginBottom: 8\n            },\n            align: \"baseline\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n              name: [field.question, 'question'],\n              fieldKey: [field.fieldKey, 'question'],\n              rules: [{\n                required: true,\n                message: 'Missing question'\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n              name: \"options\",\n              children: (fields, {\n                add,\n                remove\n              }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n                  style: {\n                    display: 'grid',\n                    marginBottom: 8\n                  },\n                  align: \"baseline\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                    name: [field.option, 'option'],\n                    fieldKey: [field.fieldKey, 'option'],\n                    rules: [{\n                      required: true,\n                      message: 'Missing option'\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      placeholder: \"Option\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 16\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n                    onClick: () => remove(field.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 15\n                  }, this)]\n                }, field.key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 14\n                }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"dashed\",\n                    onClick: () => add(field.name),\n                    block: true,\n                    icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 21\n                    }, this),\n                    children: \"Add Option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n              onClick: () => remove(field.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 10\n            }, this)]\n          }, field.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"dashed\",\n              onClick: () => add(),\n              block: true,\n              icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 16\n              }, this),\n              children: \"Add Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c = CreateExam;\nexport default CreateExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/Create.js"],"names":["Form","Input","Button","Space","DatePicker","MinusCircleOutlined","PlusOutlined","RangePicker","CreateExam","onFinish","values","console","log","display","marginBottom","fields","add","remove","map","field","question","fieldKey","required","message","option","name","key"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Space, DatePicker } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { RangePicker } = DatePicker;\r\nconst CreateExam = () => {\r\n\tconst onFinish = (values) => {\r\n\t\tconsole.log('Received values of form:', values);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form name='dynamic_form_nest_item' onFinish={onFinish} autoComplete='off'>\r\n\t\t\t<Space\r\n\t\t\t\tsize={'large'}\r\n\t\t\t\tstyle={{ display: 'grid', marginBottom: 16 }}\r\n\t\t\t\talign='baseline'\r\n\t\t\t>\r\n\t\t\t\t<RangePicker />\r\n\t\t\t\t<Form.List name='questions'>\r\n\t\t\t\t\t{(fields, { add, remove }) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{fields.map((field) => (\r\n\t\t\t\t\t\t\t\t<Space\r\n\t\t\t\t\t\t\t\t\tkey={field.key}\r\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'grid', marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\t\talign='baseline'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\tname={[field.question, 'question']}\r\n\t\t\t\t\t\t\t\t\t\tfieldKey={[field.fieldKey, 'question']}\r\n\t\t\t\t\t\t\t\t\t\trules={[{ required: true, message: 'Missing question' }]}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Input placeholder='Question' />\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.List name='options'>\r\n\t\t\t\t\t\t\t\t\t\t{(fields, { add, remove }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{fields.map((field) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Space\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={field.key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'grid', marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talign='baseline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.option, 'option']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfieldKey={[field.fieldKey, 'option']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ required: true, message: 'Missing option' },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input placeholder='Option' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(field.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='dashed'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => add(field.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Option\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Form.List>\r\n\t\t\t\t\t\t\t\t\t<MinusCircleOutlined onClick={() => remove(field.name)} />\r\n\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='dashed'\r\n\t\t\t\t\t\t\t\t\tonClick={() => add()}\r\n\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tAdd Question\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.List>\r\n\t\t\t</Space>\r\n\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default CreateExam;\r\n"]},"metadata":{},"sourceType":"module"}