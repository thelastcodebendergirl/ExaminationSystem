{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\course\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, Select } from 'antd';\nimport { useParams } from 'react-router-dom';\nimport { Typography } from 'antd';\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Paragraph\n} = Typography;\nconst layout = {\n  labelCol: {\n    span: 2\n  },\n  wrapperCol: {\n    span: 15\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n    span: 16\n  }\n};\nconst courses = [{\n  key: 1,\n  kurs: 'cloud computing'\n}, {\n  key: 2,\n  kurs: 'bulut bilişim'\n}];\n\nconst EditCourse = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n\n  const findCourse = () => {\n    return courses.find(e => e.key === id);\n  };\n\n  const kursName = findCourse().kurs;\n  const [editableStr, setEditableStr] = useState({\n    kursName\n  });\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Course Name\",\n      name: \"courseName\",\n      rules: [{\n        required: true,\n        message: 'Please input your course name!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Paragraph, {\n        editable: {\n          onChange: setEditableStr\n        },\n        children: editableStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Students\",\n      name: \"students\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        mode: \"multiple\",\n        allowClear: true,\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Please select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EditCourse, \"+dcOnuoZJ4n3NxFpmmWUKK5UtIk=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCourse;\nexport default EditCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCourse\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/course/Edit.js"],"names":["React","useState","Form","Input","Button","Checkbox","Select","useParams","Typography","HighlightOutlined","SmileOutlined","SmileFilled","Paragraph","layout","labelCol","span","wrapperCol","tailLayout","offset","courses","key","kurs","EditCourse","id","findCourse","find","e","kursName","editableStr","setEditableStr","onFinish","values","console","log","onFinishFailed","errorInfo","remember","required","message","onChange","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Button, Checkbox, Select } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Typography } from 'antd';\r\nimport {\r\n\tHighlightOutlined,\r\n\tSmileOutlined,\r\n\tSmileFilled,\r\n} from '@ant-design/icons';\r\n\r\nconst { Paragraph } = Typography;\r\nconst layout = {\r\n\tlabelCol: { span: 2 },\r\n\twrapperCol: { span: 15 },\r\n};\r\nconst tailLayout = {\r\n\twrapperCol: { offset: 2, span: 16 },\r\n};\r\nconst courses = [\r\n\t{\r\n\t\tkey: 1,\r\n\t\tkurs: 'cloud computing',\r\n\t},\r\n\t{\r\n\t\tkey: 2,\r\n\t\tkurs: 'bulut bilişim',\r\n\t},\r\n];\r\nconst EditCourse = () => {\r\n\tconst { id } = useParams();\r\n\tconst findCourse = () => {\r\n\t\treturn courses.find((e) => e.key === id);\r\n\t};\r\n\tconst kursName = findCourse().kurs;\r\n\tconst [editableStr, setEditableStr] = useState({ kursName });\r\n\r\n\tconst onFinish = (values) => {\r\n\t\tconsole.log('Success:', values);\r\n\t};\r\n\r\n\tconst onFinishFailed = (errorInfo) => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\t{...layout}\r\n\t\t\tname='basic'\r\n\t\t\tinitialValues={{ remember: true }}\r\n\t\t\tonFinish={onFinish}\r\n\t\t\tonFinishFailed={onFinishFailed}\r\n\t\t>\r\n\t\t\t<Form.Item\r\n\t\t\t\tlabel='Course Name'\r\n\t\t\t\tname='courseName'\r\n\t\t\t\trules={[{ required: true, message: 'Please input your course name!' }]}\r\n\t\t\t>\r\n\t\t\t\t<Paragraph editable={{ onChange: setEditableStr }}>\r\n\t\t\t\t\t{editableStr}\r\n\t\t\t\t</Paragraph>\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item label='Students' name='students'>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tmode='multiple'\r\n\t\t\t\t\tallowClear\r\n\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\tplaceholder='Please select'\r\n\t\t\t\t/>\r\n\t\t\t</Form.Item>\r\n\t\t\t<Form.Item {...tailLayout}>\r\n\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\tCreate\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default EditCourse;\r\n"]},"metadata":{},"sourceType":"module"}