{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\Create.js\";\nimport { Form, Input, Button, Space, DatePicker } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\n\nconst CreateExam = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(RangePicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"questions\",\n      children: (fields, {\n        add,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n          style: {\n            display: 'grid',\n            marginBottom: 8\n          },\n          align: \"baseline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n            name: [field.question, 'question'],\n            fieldKey: [field.fieldKey, 'question'],\n            rules: [{\n              required: true,\n              message: 'Missing question'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.List, {\n            name: \"options\",\n            children: (fields, {\n              add,\n              remove\n            }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n                style: {\n                  display: 'grid',\n                  marginBottom: 8\n                },\n                align: \"baseline\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                  name: [field.option, 'option'],\n                  fieldKey: [field.fieldKey, 'option'],\n                  rules: [{\n                    required: true,\n                    message: 'Missing option'\n                  }],\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"Option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 14\n                }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n                  onClick: () => remove(field.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 14\n                }, this)]\n              }, field.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 13\n              }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"dashed\",\n                  onClick: () => add(field.name),\n                  block: true,\n                  icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 20\n                  }, this),\n                  children: \"Add Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n            onClick: () => remove(field.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this)]\n        }, field.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 8\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"dashed\",\n            onClick: () => add(),\n            block: true,\n            icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this),\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c = CreateExam;\nexport default CreateExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/Create.js"],"names":["Form","Input","Button","Space","DatePicker","MinusCircleOutlined","PlusOutlined","RangePicker","CreateExam","onFinish","values","console","log","fields","add","remove","map","field","display","marginBottom","question","fieldKey","required","message","option","name","key"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Space, DatePicker } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { RangePicker } = DatePicker;\r\nconst CreateExam = () => {\r\n\tconst onFinish = (values) => {\r\n\t\tconsole.log('Received values of form:', values);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form name='dynamic_form_nest_item' onFinish={onFinish} autoComplete='off'>\r\n\t\t\t<RangePicker />\r\n\r\n\t\t\t<Form.List name='questions'>\r\n\t\t\t\t{(fields, { add, remove }) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{fields.map((field) => (\r\n\t\t\t\t\t\t\t<Space\r\n\t\t\t\t\t\t\t\tkey={field.key}\r\n\t\t\t\t\t\t\t\tstyle={{ display: 'grid', marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\talign='baseline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\tname={[field.question, 'question']}\r\n\t\t\t\t\t\t\t\t\tfieldKey={[field.fieldKey, 'question']}\r\n\t\t\t\t\t\t\t\t\trules={[{ required: true, message: 'Missing question' }]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Input placeholder='Question' />\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t<Form.List name='options'>\r\n\t\t\t\t\t\t\t\t\t{(fields, { add, remove }) => (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t{fields.map((field) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Space\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={field.key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'grid', marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talign='baseline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.option, 'option']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfieldKey={[field.fieldKey, 'option']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ required: true, message: 'Missing option' },\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input placeholder='Option' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(field.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='dashed'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => add(field.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Option\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Form.List>\r\n\t\t\t\t\t\t\t\t<MinusCircleOutlined onClick={() => remove(field.name)} />\r\n\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='dashed'\r\n\t\t\t\t\t\t\t\tonClick={() => add()}\r\n\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAdd Question\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Form.List>\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default CreateExam;\r\n"]},"metadata":{},"sourceType":"module"}