{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Typography, Radio, Space, Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Question() {\n  _s();\n\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false\n    }, {\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true\n    }, {\n      answerText: 'Intel',\n      isCorrect: false\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = (isCorrect, index) => {\n    document.getElementById(index).style.backgroundColor = '#A9A9A9';\n\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Question \", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this), \"/\", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: question.answerOptions.map((answerOption, index) => /*#__PURE__*/_jsxDEV(Radio, {\n              id: index,\n              onClick: () => handleAnswerOptionClick(answerOption.isCorrect, index),\n              children: answerOption.answerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Question, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/Question.js"],"names":["React","useState","Button","Typography","Radio","Space","Card","Question","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","index","document","getElementById","style","backgroundColor","nextQuestion","length","map","question","answerOption"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,QAAuD,MAAvD;;;AACA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAClC,QAAMC,SAAS,GAAG,CACjB;AACCC,IAAAA,YAAY,EAAE,gCADf;AAECC,IAAAA,aAAa,EAAE,CACd;AAAEC,MAAAA,UAAU,EAAE,UAAd;AAA0BC,MAAAA,SAAS,EAAE;AAArC,KADc,EAEd;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAFc,EAGd;AAAED,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KAHc,EAId;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAJc;AAFhB,GADiB,EAUjB;AACCH,IAAAA,YAAY,EAAE,sBADf;AAECC,IAAAA,aAAa,EAAE,CACd;AAAEC,MAAAA,UAAU,EAAE,YAAd;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KADc,EAEd;AAAED,MAAAA,UAAU,EAAE,WAAd;AAA2BC,MAAAA,SAAS,EAAE;AAAtC,KAFc,EAGd;AAAED,MAAAA,UAAU,EAAE,YAAd;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KAHc,EAId;AAAED,MAAAA,UAAU,EAAE,YAAd;AAA4BC,MAAAA,SAAS,EAAE;AAAvC,KAJc;AAFhB,GAViB,EAmBjB;AACCH,IAAAA,YAAY,EAAE,0CADf;AAECC,IAAAA,aAAa,EAAE,CACd;AAAEC,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KADc,EAEd;AAAED,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,SAAS,EAAE;AAAlC,KAFc,EAGd;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAHc,EAId;AAAED,MAAAA,UAAU,EAAE,WAAd;AAA2BC,MAAAA,SAAS,EAAE;AAAtC,KAJc;AAFhB,GAnBiB,EA4BjB;AACCH,IAAAA,YAAY,EAAE,wCADf;AAECC,IAAAA,aAAa,EAAE,CACd;AAAEC,MAAAA,UAAU,EAAE,GAAd;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KADc,EAEd;AAAED,MAAAA,UAAU,EAAE,GAAd;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAFc,EAGd;AAAED,MAAAA,UAAU,EAAE,GAAd;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAHc,EAId;AAAED,MAAAA,UAAU,EAAE,GAAd;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAJc;AAFhB,GA5BiB,CAAlB;AAuCA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMkB,uBAAuB,GAAG,CAACP,SAAD,EAAYQ,KAAZ,KAAsB;AACrDC,IAAAA,QAAQ,CAACC,cAAT,CAAwBF,KAAxB,EAA+BG,KAA/B,CAAqCC,eAArC,GAAuD,SAAvD;;AACA,QAAIZ,SAAJ,EAAe;AACdM,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA;;AAED,UAAMQ,YAAY,GAAGZ,eAAe,GAAG,CAAvC;;AACA,QAAIY,YAAY,GAAGjB,SAAS,CAACkB,MAA7B,EAAqC;AACpCZ,MAAAA,kBAAkB,CAACW,YAAD,CAAlB;AACA,KAFD,MAEO;AACNT,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD,GAZD;;AAaA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEE;AAAA,gBACER,SAAS,CAACmB,GAAV,CAAc,CAACC,QAAD,EAAWR,KAAX,kBACd,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACC;AAAA,kCACC;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACC;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACC;AAAA,wCAAgBA,KAAK,GAAG,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,OACoCZ,SAAS,CAACkB,MAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAIC,QAAC,UAAD;AAAA,wBAAaE,QAAQ,CAACnB;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAOC;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACEmB,QAAQ,CAAClB,aAAT,CAAuBiB,GAAvB,CAA2B,CAACE,YAAD,EAAeT,KAAf,kBAC3B,QAAC,KAAD;AACC,cAAA,EAAE,EAAEA,KADL;AAEC,cAAA,OAAO,EAAE,MACRD,uBAAuB,CAACU,YAAY,CAACjB,SAAd,EAAyBQ,KAAzB,CAHzB;AAAA,wBAMES,YAAY,CAAClB;AANf;AAAA;AAAA;AAAA;AAAA,oBADA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA;;GAzFuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Typography, Radio, Space, Card } from 'antd';\r\nexport default function Question() {\r\n\tconst questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'What is the capital of France?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\r\n\t\t\t\t{ answerText: 'London', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Who is CEO of Tesla?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'The iPhone was created by which company?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\r\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\r\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'How many Harry Potter books are there?',\r\n\t\t\tanswerOptions: [\r\n\t\t\t\t{ answerText: '1', isCorrect: false },\r\n\t\t\t\t{ answerText: '4', isCorrect: false },\r\n\t\t\t\t{ answerText: '6', isCorrect: false },\r\n\t\t\t\t{ answerText: '7', isCorrect: true },\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [showScore, setShowScore] = useState(false);\r\n\tconst [score, setScore] = useState(0);\r\n\r\n\tconst handleAnswerOptionClick = (isCorrect, index) => {\r\n\t\tdocument.getElementById(index).style.backgroundColor = '#A9A9A9';\r\n\t\tif (isCorrect) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t} else {\r\n\t\t\tsetShowScore(true);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t{\r\n\t\t\t\t<>\r\n\t\t\t\t\t{questions.map((question, index) => (\r\n\t\t\t\t\t\t<Space size='middle'>\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t\t\t<span>Question {index + 1}</span>/{questions.length}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Typography>{question.questionText}</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t\t\t{question.answerOptions.map((answerOption, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleAnswerOptionClick(answerOption.isCorrect, index)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{answerOption.answerText}\r\n\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}