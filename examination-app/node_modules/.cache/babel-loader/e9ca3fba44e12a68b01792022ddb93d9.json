{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\Create.js\";\nimport { Form, Input, Button, Space, DatePicker, Card } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\n\nconst CreateExam = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        display: 'grid',\n        marginBottom: 8\n      },\n      align: \"baseline\",\n      children: [/*#__PURE__*/_jsxDEV(RangePicker, {\n        showTime: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        size: \"default\",\n        title: \"Question\",\n        style: {\n          width: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(Form.List, {\n          name: \"questions\",\n          children: (fields, {\n            add,\n            remove\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n              style: {\n                display: 'grid',\n                marginBottom: 8\n              },\n              align: \"baseline\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                name: [field.question, 'question'],\n                fieldKey: [field.fieldKey, 'question'],\n                rules: [{\n                  required: true,\n                  message: 'Missing question'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                size: \"small\",\n                title: \"Option\",\n                style: {\n                  width: 100\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.List, {\n                  name: \"options\",\n                  children: (fields, {\n                    add,\n                    remove\n                  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [fields.map(field => /*#__PURE__*/_jsxDEV(Space, {\n                      style: {\n                        display: 'grid',\n                        marginBottom: 8\n                      },\n                      align: \"baseline\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n                        name: [field.option, 'option'],\n                        fieldKey: [field.fieldKey, 'option'],\n                        rules: [{\n                          required: true,\n                          message: 'Missing option'\n                        }],\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          placeholder: \"Option\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 54,\n                          columnNumber: 18\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 43,\n                        columnNumber: 17\n                      }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n                        onClick: () => remove(field.name)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 56,\n                        columnNumber: 17\n                      }, this)]\n                    }, field.key, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 38,\n                      columnNumber: 16\n                    }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"dashed\",\n                        onClick: () => add(field.name),\n                        block: true,\n                        icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 67,\n                          columnNumber: 23\n                        }, this),\n                        children: \"Add Option\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 16\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n                  onClick: () => remove(field.name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 11\n              }, this)]\n            }, field.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 10\n            }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"dashed\",\n                onClick: () => add(),\n                block: true,\n                icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this),\n                children: \"Add Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n\n_c = CreateExam;\nexport default CreateExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/Create.js"],"names":["Form","Input","Button","Space","DatePicker","Card","MinusCircleOutlined","PlusOutlined","RangePicker","CreateExam","onFinish","values","console","log","display","marginBottom","width","fields","add","remove","map","field","question","fieldKey","required","message","option","name","key"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Space, DatePicker, Card } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { RangePicker } = DatePicker;\r\nconst CreateExam = () => {\r\n\tconst onFinish = (values) => {\r\n\t\tconsole.log('Received values of form:', values);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form name='dynamic_form_nest_item' onFinish={onFinish} autoComplete='off'>\r\n\t\t\t<Space style={{ display: 'grid', marginBottom: 8 }} align='baseline'>\r\n\t\t\t\t<RangePicker showTime={true} />\r\n\r\n\t\t\t\t<Card size='default' title='Question' style={{ width: 300 }}>\r\n\t\t\t\t\t<Form.List name='questions'>\r\n\t\t\t\t\t\t{(fields, { add, remove }) => (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{fields.map((field) => (\r\n\t\t\t\t\t\t\t\t\t<Space\r\n\t\t\t\t\t\t\t\t\t\tkey={field.key}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'grid', marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\t\t\talign='baseline'\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\tname={[field.question, 'question']}\r\n\t\t\t\t\t\t\t\t\t\t\tfieldKey={[field.fieldKey, 'question']}\r\n\t\t\t\t\t\t\t\t\t\t\trules={[{ required: true, message: 'Missing question' }]}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input placeholder='Question' />\r\n\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Card size='small' title='Option' style={{ width: 100 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.List name='options'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{(fields, { add, remove }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{fields.map((field) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Space\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={field.key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'grid', marginBottom: 8 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talign='baseline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...field}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.option, 'option']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfieldKey={[field.fieldKey, 'option']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Missing option',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input placeholder='Option' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MinusCircleOutlined\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(field.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='dashed'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => add(field.name)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Option\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.List>\r\n\t\t\t\t\t\t\t\t\t\t\t<MinusCircleOutlined onClick={() => remove(field.name)} />\r\n\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype='dashed'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => add()}\r\n\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tAdd Question\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.List>\r\n\t\t\t\t</Card>\r\n\t\t\t</Space>\r\n\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default CreateExam;\r\n"]},"metadata":{},"sourceType":"module"}