{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdurm\\\\Documents\\\\GitHub\\\\ExaminationSystem\\\\examination-app\\\\src\\\\exam\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button, Space, DatePicker, Card, Select } from 'antd';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\n\nconst CreateExam = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  const onOk = value => {\n    console.log('selected time:', value[0].format('YYYY-MM-DD HH:mm'), value[1].format('YYYY-MM-DD HH:mm'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        display: 'grid',\n        marginBottom: 8\n      },\n      align: \"baseline\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: 'exam-name',\n          fieldKey: 'exam-name',\n          label: 'Exam Name',\n          rules: [{\n            required: true,\n            message: 'Missing exam name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: 'date-range',\n          fieldKey: 'date-range',\n          label: 'Date Interval',\n          rules: [{\n            required: true,\n            message: 'Missing date range'\n          }],\n          children: /*#__PURE__*/_jsxDEV(RangePicker, {\n            showTime: {\n              format: 'HH:mm'\n            },\n            format: \"YYYY-MM-DD HH:mm\",\n            onOk: onOk\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        title: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        title: \"D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: ('A', 'B', 'C', 'D')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateExam, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = CreateExam;\nexport default CreateExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"sources":["C:/Users/hdurm/Documents/GitHub/ExaminationSystem/examination-app/src/exam/Create.js"],"names":["Form","Input","Button","Space","DatePicker","Card","Select","React","useParams","MinusCircleOutlined","PlusOutlined","RangePicker","CreateExam","id","onFinish","values","console","log","onOk","value","format","display","marginBottom","required","message"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Space, DatePicker, Card, Select } from 'antd';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nconst { RangePicker } = DatePicker;\r\nconst CreateExam = () => {\r\n\tconst { id } = useParams();\r\n\tconst onFinish = (values) => {\r\n\t\tconsole.log('Received values of form:', values);\r\n\t};\r\n\tconst onOk = (value) => {\r\n\t\tconsole.log(\r\n\t\t\t'selected time:',\r\n\t\t\tvalue[0].format('YYYY-MM-DD HH:mm'),\r\n\t\t\tvalue[1].format('YYYY-MM-DD HH:mm')\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<Form name='dynamic_form_nest_item' onFinish={onFinish} autoComplete='off'>\r\n\t\t\t<Space style={{ display: 'grid', marginBottom: 8 }} align='baseline'>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname={'exam-name'}\r\n\t\t\t\t\t\tfieldKey={'exam-name'}\r\n\t\t\t\t\t\tlabel={'Exam Name'}\r\n\t\t\t\t\t\trules={[{ required: true, message: 'Missing exam name' }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname={'date-range'}\r\n\t\t\t\t\t\tfieldKey={'date-range'}\r\n\t\t\t\t\t\tlabel={'Date Interval'}\r\n\t\t\t\t\t\trules={[{ required: true, message: 'Missing date range' }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RangePicker\r\n\t\t\t\t\t\t\tshowTime={{ format: 'HH:mm' }}\r\n\t\t\t\t\t\t\tformat='YYYY-MM-DD HH:mm'\r\n\t\t\t\t\t\t\tonOk={onOk}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Card>\r\n\t\t\t</Space>\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Input title='Question' />\r\n\t\t\t\t<Input title='A' />\r\n\t\t\t\t<Input title='B' />\r\n\t\t\t\t<Input title='C' />\r\n\t\t\t\t<Input title='D' />\r\n\t\t\t\t<Select options={('A', 'B', 'C', 'D')} />\r\n\t\t\t</Form.Item>\r\n\r\n\t\t\t<Form.Item>\r\n\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\tCreate\r\n\t\t\t\t</Button>\r\n\t\t\t</Form.Item>\r\n\t\t</Form>\r\n\t);\r\n};\r\nexport default CreateExam;\r\n"]},"metadata":{},"sourceType":"module"}